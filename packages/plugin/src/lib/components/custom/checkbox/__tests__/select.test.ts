import { describe, expect, it } from 'vitest'
import { Selector } from '../select'
import { sortBy } from 'lodash-es'

describe('Selector', () => {
  it('should be select', () => {
    const selector = new Selector(['a', 'b', 'c', 'd', 'e'])
    selector.click('a')
    expect(selector.selected).toEqual(['a'])
    selector.click('b')
    selector.click('a')
    expect(selector.selected).toEqual(['b'])
  })
  it('should be range select', () => {
    const selector = new Selector(['a', 'b', 'c', 'd', 'e'])
    selector.click('a')
    selector.shiftDown()
    selector.click('c')
    expect(selector.selected).toEqual(['a', 'b', 'c'])
    selector.click('e')
    expect(selector.selected).toEqual(['a', 'b', 'c', 'd', 'e'])
    selector.click('c')
    expect(selector.selected).toEqual(['a', 'b', 'c'])
    selector.shiftUp()
    selector.click('e')
    expect(selector.selected).toEqual(['a', 'b', 'c', 'e'])
  })
  it('should be reverse select', () => {
    const selector = new Selector(['a', 'b', 'c', 'd', 'e'])
    selector.click('c')
    selector.shiftDown()
    selector.click('e')
    expect(selector.selected).toEqual(['c', 'd', 'e'])
    selector.click('a')
    expect(sortBy(selector.selected)).toEqual(['a', 'b', 'c'])
    selector.shiftUp()
    expect(sortBy(selector.selected)).toEqual(['a', 'b', 'c'])
  })
  it('should be remove mode', () => {
    const selector = new Selector(['a', 'b', 'c', 'd', 'e'])
    selector.click('a')
    selector.shiftDown()
    selector.click('c')
    expect(selector.selected).toEqual(['a', 'b', 'c'])
    selector.shiftUp()
    selector.shiftDown()
    selector.click('c')
    expect(selector.selected).toEqual(['a', 'b'])
    selector.click('b')
    expect(selector.selected).toEqual(['a'])
    selector.click('d')
    expect(selector.selected).toEqual(['a', 'b'])
    selector.shiftUp()
    expect(selector.selected).toEqual(['a', 'b'])
  })
  it('should be cross select', () => {
    const selector = new Selector(['a', 'b', 'c', 'd', 'e'])
    selector.click('a')
    selector.shiftDown()
    selector.click('c')
    expect(selector.selected).toEqual(['a', 'b', 'c'])
    selector.shiftUp()
    selector.click('e')
    expect(selector.selected).toEqual(['a', 'b', 'c', 'e'])
    selector.shiftDown()
    selector.click('b')
    expect(sortBy(selector.selected)).toEqual(['a', 'b', 'c', 'd', 'e'])
    selector.shiftUp()
    expect(sortBy(selector.selected)).toEqual(['a', 'b', 'c', 'd', 'e'])
  })
})
